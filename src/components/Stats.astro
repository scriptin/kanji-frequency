---
export interface Props {
	textsCount: number;
	totalKanjiCount: number;
	uniqueKanjiCount: number;
}

const {
  textsCount,
  totalKanjiCount,
  uniqueKanjiCount,
  class: className,
} = Astro.props;

function humanReadable(n) {
  if (n > 1_000_000) {
     return `${(n / 1_000_000).toFixed(2)}M`;
  }
}

const data = [
  { title: 'Texts', value: textsCount },
  { title: 'Total kanji', value: humanReadable(totalKanjiCount), rounded: true },
  { title: 'Uniq. kanji', value: uniqueKanjiCount },
];
---

<div class:list={[
  className,
  "flex flex-wrap gap-x-3 gap-y-1 text-sky-100"
]}>
	{data.map(({ title, value, rounded = false }) => (
	  <div class="flex flex-col first:pl-0 first:border-l-0 pl-3 border-l border-l-sky-300/20">
	    <div class="text-xs text-sky-300 uppercase">
	      {title}
	    </div>
	    <div>
	      {rounded && <span class="text-sky-300">â‰ˆ</span>}
	      {value}
	    </div>
	  </div>
	))}
</div>
