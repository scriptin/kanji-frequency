---
export interface Props {
  textsCount: number;
  totalKanjiCount: number;
  uniqueKanjiCount: number;
  inverted?: boolean;
  class?: string;
}

const {
  textsCount,
  totalKanjiCount,
  uniqueKanjiCount,
  inverted = false,
  class: className,
} = Astro.props;

function humanReadable(n: number) {
  return new Intl.NumberFormat('en-US').format(n);
}

const data = [
  { title: 'Texts', value: humanReadable(textsCount) },
  { title: 'Total kanji', value: humanReadable(totalKanjiCount) },
  { title: 'Uniq. kanji', value: humanReadable(uniqueKanjiCount) },
];
---

<div class="@container">
  <div
    class:list={[
      className,
      `flex flex-col @[18rem]:flex-row flex-wrap gap-x-3 gap-y-1`,
    ]}
  >
    {
      data.map(({ title, value }) => (
        <div
          class:list={[
            'flex flex-row @[18rem]:flex-col gap-2 @[18rem]:gap-0 first:pl-0 first:border-l-0 @[18rem]:pl-3 @[18rem]:border-l',
            inverted
              ? '@[18rem]:border-l-sky-300/20'
              : '@[18rem]:border-l-sky-700/20',
          ]}
        >
          <div
            class:list={[
              'text-xs uppercase',
              inverted ? 'text-sky-300' : 'text-sky-700',
            ]}
          >
            {title}
          </div>
          <div
            class:list={[
              'text-xs @[18rem]:text-base',
              inverted ? 'text-sky-100' : 'text-sky-900',
            ]}
          >
            {value}
          </div>
        </div>
      ))
    }
  </div>
</div>
