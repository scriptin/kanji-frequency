---
import type { MarkdownLayoutProps } from 'astro';
import { getCollection } from 'astro:content';

import BaseLayout from '@layouts/BaseLayout.astro';
import Box from '@components/Box.astro';
import PageTitle from '@components/PageTitle.astro';
import PageSubtitle from '@components/PageSubtitle.astro';
import Card from '@components/Card.astro';
import Stats from '@components/Stats.astro';

import aozoraCharacters from '@data/aozora_characters.csv';
import aozoraDocuments from '@data/aozora_documents.csv';
import wikipediaCharacters from '@data/wikipedia_characters.csv';
import wikipediaDocuments from '@data/wikipedia_documents.csv';
import newsCharacters from '@data/news_characters.csv';
import newsDocuments from '@data/news_documents.csv';

const csv: any = {
  aozora: {
    characters: aozoraCharacters,
    documents: aozoraDocuments,
  },
  wikipedia: {
    characters: wikipediaCharacters,
    documents: wikipediaDocuments,
  },
  news: {
    characters: newsCharacters,
    documents: newsDocuments,
  },
};

type Props = MarkdownLayoutProps<{
  title: string;
  subtitle: string;
}>;

const { title, subtitle } = Astro.props.frontmatter;

const cards = await getCollection('cards');
cards.sort((a, b) => a.data.order - b.data.order);
---

<BaseLayout title={title}>
  <Box slot="header">
    <PageTitle>{title}</PageTitle>
    <PageSubtitle>{subtitle}</PageSubtitle>
    <nav class="flex flex-wrap gap-x-3 gap-y-1">
      <a
        href="https://github.com/scriptin/kanji-frequency/tree/master/data"
        class="font-bold"
        target="_blank"
      >
        Download
      </a>
      <a href="https://github.com/scriptin/kanji-frequency" target="_blank">
        GitHub
      </a>
      <a href="#about">About</a>
    </nav>
  </Box>
  <div slot="content" class="flex flex-col gap-4">
    <ul role="list" class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      {
        cards.map(async (card) => {
          const { Content } = await card.render();

          if (!card.data.csvPrefix) {
            return (
              <li>
                <Card href={card.data.url} title={card.data.title}>
                  <div class="markdown">
                    <Content />
                  </div>
                </Card>
              </li>
            );
          }

          const { characters, documents } = csv[card.data.csvPrefix];
          return (
            <li>
              <Card href={card.data.url} title={card.data.title}>
                <div class="markdown">
                  <Content />
                </div>
                <Stats
                  class="mt-2"
                  textsCount={documents[0].doc_count}
                  totalKanjiCount={characters[0].char_count}
                  uniqueKanjiCount={characters.length - 2}
                />
              </Card>
            </li>
          );
        })
      }
    </ul>
    <Box>
      <article class="markdown">
        <slot />
      </article>
    </Box>
  </div>
</BaseLayout>
